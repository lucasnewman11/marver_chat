# Sales Call Simulator Project Continuation State

## Current Progress
We have created the following files for the Streamlit application:
1. `app.py` - Main application code with Google Drive integration, Pinecone vector storage, and dual-mode operation
2. `requirements.txt` - Dependencies for the application
3. `.streamlit/secrets.toml` - Template for API keys and secrets (needs to be filled in)
4. `README.md` - Documentation for the project
5. `.gitignore` - To prevent sensitive information from being committed

## Required Information to Continue
The following information is needed to complete the setup:

1. **API Keys and Services**
   - Anthropic API Key: Need to obtain or use existing key
   - Pinecone: 
     - Need to create account if not already done
     - Need Pinecone API key
     - Need to choose Pinecone environment (e.g., "us-west1-gcp")
   - Voyage AI: Need API key for embeddings (or can switch to alternative embedding model)
   - Google Service Account: Need JSON credentials

2. **Google Drive Structure**
   - Need to organize documents into folders:
     - Simulation Folder: High-quality complete call transcripts
     - Technical Folder: Product specs, contract details, technical documents
     - General Folder: Other call transcripts
   - Need folder IDs for each of these folders

3. **Deployment**
   - Need GitHub repository for deployment to Streamlit Cloud
   - Need to set up secrets in Streamlit Cloud dashboard after creating app

## Next Steps
1. Fill in `.streamlit/secrets.toml` with API keys and service account JSON
2. Test application locally with `streamlit run app.py`
3. Push code to GitHub repository
4. Deploy on Streamlit Cloud
5. Configure secrets in Streamlit Cloud dashboard
6. Load documents using the app's interface

## Implementation Details
The application uses a hybrid approach:
- Complete simulation documents are stored with minimal chunking (3000 tokens)
- Technical and general documents use standard chunking (512 tokens)
- Pinecone stores document vectors and metadata
- Dual query modes:
  - Simulation mode prioritizes complete call transcripts
  - Assistant mode uses all available documents
- Google Drive integration allows loading documents directly from your organized folders

## Example Usage Flow
1. User loads documents by entering folder IDs
2. System indexes documents in Pinecone with appropriate chunking strategies
3. User switches between assistant and simulation modes using sidebar
4. In simulation mode, system retrieves primarily from complete call transcripts
5. In assistant mode, system retrieves from all available documents including technical specs